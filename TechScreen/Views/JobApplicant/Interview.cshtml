@model List<TechScreen.DBEntities.ScreeningQuestions>
@using Newtonsoft.Json;

@{
    var jsonObject = JsonConvert.SerializeObject(Model, Formatting.None,
        new JsonSerializerSettings()
        {
            ReferenceLoopHandling = ReferenceLoopHandling.Ignore
        });
}

@section Scripts
    {
    <script src="https://cdn.webrtc-experiment.com/RecordRTC.js"></script>
    <script src="https://webrtc.github.io/adapter/adapter-latest.js"></script>
    <script src="https://www.webrtc-experiment.com/common.js"></script>

    <script>
        $(document).ready(function () {

            var candidateCode = '@ViewBag.CandidateCode'
            var jsonString = '@jsonObject';
            var questions = JSON.parse(jsonString.replace(/&quot;/g, '"'));
            var totalQuestions = '@Model.Count';
            var recorder;
            var video = document.querySelector('video');
            
            $("#btnStartInterview").hide();
            $("#btnFinishInterview").hide();
            $("#divInterview").hide();
            $("#divComplete").hide();

            $("#btnCheckWebcam").click(function (e) {
                e.preventDefault();
                $("#btnStartInterview").show();
                $("#btnCheckWebcam").hide();
                $("#divInterview").show();
                $("#btnNext").hide();

                startRecording();
            });

            $("#btnStartInterview").click(function (e) {

                e.preventDefault();

                recorder.stopRecording(stopTestingCallback);

                startRecording();

                $("#divInterview").show();
                $("#btnStartInterview").hide();
                $("#btnCheckWebcam").hide();
                $("#btnNext").show();

                $("#lblQuestionNo").text("Question " + questions[0].QuestionId + " of " + totalQuestions);
                $("#lblQuestionText").text(questions[0].QuestionText);
            });

            var cnt = 1;
            $("#btnNext").click(function (e) {

                e.preventDefault();

                if (cnt < totalQuestions) {
                    $("#lblQuestionNo").text("Question " + questions[cnt].QuestionId + " of " + totalQuestions);
                    $("#lblQuestionText").text(questions[cnt].QuestionText);
                    recorder.stopRecording(stopRecordingCallback);
                    startRecording();
                }
                cnt = cnt + 1;

                if (cnt == totalQuestions) {
                    $("#btnNext").hide();
                    $("#btnFinishInterview").show();
                }
            });

            $("#btnFinishInterview").click(function (e) {
                e.preventDefault();
                recorder.stopRecording(stopRecordingCallback);
                $("#divStart").hide();
                $("#divComplete").show();

                $.ajax({
                    type: "Get",
                    url: '/JobApplicant/ScreeningCompleted',
                    data: { candidateCode: candidateCode},
                }).done(function (data) {
                    //console.log(data);
                });

            });

            function captureCamera(callback) {
                navigator.mediaDevices.getUserMedia({ audio: true, video: true }).then(function (camera) {
                    callback(camera);
                }).catch(function (error) {
                    alert('Unable to capture your camera. Please check console logs.');
                    console.error(error);
                });
        }

            function startRecording() {
            captureCamera(function (camera) {
                video.muted = true;
                video.volume = 0;
                video.srcObject = camera;
                recorder = RecordRTC(camera, {
                    type: 'video'
                });

                recorder.startRecording();
                recorder.camera = camera;
            });
        }

            function stopTestingCallback() {
                video.src = video.srcObject = null;
                video.muted = false;
                video.volume = 1;
                recorder.camera.stop();
                recorder.destroy();
                recorder = null;
            }

            function stopRecordingCallback() {
                video.src = video.srcObject = null;
                video.muted = false;
                video.volume = 1;
                //debugger;
                //video.src = URL.createObjectURL(recorder.getBlob());
                PostBlob(recorder.getBlob());

                recorder.camera.stop();
                recorder.destroy();
                recorder = null;
            }

            function PostBlob(blob) {

                var formData = new FormData();
                formData.append('video-filename', 'myVideoFile');
                formData.append('video-blob', blob);

                $.ajax({
                    type: "POST",
                    url: '/JobApplicant/PostRecordedAudioVideo',
                    data: formData,
                    processData: false,
                    contentType: false
                }).done(function (data) {
                    console.log(data);
                });
            }
        });
    </script>
}

<div class="container" id="divStart">
    <div class="row">
        <label id="lblTotalQuestions">Total Questions: @Model.Count</label>
    </div>

    <div class="row">&nbsp;</div>

    <div id="divInterview">
        <div class="row">
            <video controls autoplay playsinline></video>
        </div>

        <div class="row">&nbsp;</div>

        <div class="row" id="divQuestions">
            <div class="form-group">
                <h3><label id="lblQuestionNo"></label></h3>
                <hr />
                <h3><label id="lblQuestionText"></label></h3>
                <hr />
                <button id="btnNext" class="btn btn-primary">Next Question</button>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="form-group">
            <button id="btnCheckWebcam" class="btn btn-primary">Test your webcam and microphone</button>
            <button id="btnStartInterview" class="btn btn-primary">Start Interview</button>
            <button id="btnFinishInterview" class="btn btn-primary">Finish Interview</button>
            <hr />
        </div>
    </div>
</div>

<div class="container" id="divComplete">

    <div class="row">
        <h1>Thanks for your time to attend the screening. We will send the feedback to the hiring company</h1>
    </div>
    <div class="row">&nbsp;</div>
    <div class="row">
        <h1>For security reasons. We recommand please close this browser window now</h1>
    </div>

</div>